"use strict";function isType(r,n){return typeof n===r}function isArrayOf(r,n){return Array.isArray(n)&&n.every(r)}function arrayToString(r){var n=new Table;return r.forEach(function(r){"string"==typeof r||"number"==typeof r?n.cell("item",r):Object.keys(r).forEach(function(t){n.cell(t,r[t])}),n.newRow()}),n.toString()}function printTableWithColumnTitles(r,n){var t=new Table;n.forEach(function(n){n.forEach(function(n,o){t.cell(r[o],n)}),t.newRow()});var o=t.toString();console.log(o)}function printTitleTable(r,n){var t=arrayToString(n),o=t.indexOf("\n");if(o>0){r.length>o&&(o=r.length),console.log(r);var e,i="";for(e=0;e<o;e+=1)i+="-";console.log(i)}console.log(t)}function objectToArray(r){return Object.keys(r).map(function(n){return{key:n,value:r[n]}})}function objectToString(r){return arrayToString(objectToArray(r))}var isString=isType.bind(null,"string"),isArrayOfStrings=isArrayOf.bind(null,isString),isArrayOfArrays=isArrayOf.bind(null,Array.isArray),Table=require("easy-table");module.exports=function(){var r=Array.prototype.slice.call(arguments);return 2===r.length&&"string"==typeof r[0]&&Array.isArray(r[1])?printTitleTable(r[0],r[1]):2===r.length&&isArrayOfStrings(r[0])&&isArrayOfArrays(r[1])?printTableWithColumnTitles(r[0],r[1]):void r.forEach(function(r){if("string"==typeof r)return console.log(r);Array.isArray(r)?console.log(arrayToString(r)):"object"==typeof r&&console.log(objectToString(r))})};